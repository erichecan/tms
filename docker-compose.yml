version: '3.8'

services:
  # PostgreSQL数据库
  postgres:
    image: postgres:15-alpine
    container_name: tms-postgres
    environment:
      POSTGRES_DB: tms_platform
      POSTGRES_USER: tms_user
      POSTGRES_PASSWORD: tms_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./docker/postgres/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - tms-network

  # Redis缓存
  redis:
    image: redis:7-alpine
    container_name: tms-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - tms-network

  # 后端服务
  backend:
    build:
      context: .
      dockerfile: docker/backend/Dockerfile
    container_name: tms-backend
    env_file:
      - .env
    environment:
      NODE_ENV: development
      DATABASE_URL: postgresql://tms_user:tms_password@postgres:5432/tms_platform
      REDIS_URL: redis://redis:6379
      JWT_SECRET: your-jwt-secret-key
      PORT: 8000
      GOOGLE_MAPS_API_KEY: ${GOOGLE_MAPS_API_KEY}
    ports:
      - "8000:8000"
    depends_on:
      - postgres
      - redis
    # 不挂载源码，使用构建产物运行 // 2025-09-26 09:14:30
    networks:
      - tms-network

  # 前端服务
  frontend:
    build:
      context: .
      dockerfile: docker/frontend/Dockerfile
      args:
        VITE_API_BASE_URL: http://localhost:8000/api
        VITE_GOOGLE_MAPS_API_KEY: ${VITE_GOOGLE_MAPS_API_KEY}
    container_name: tms-frontend
    env_file:
      - .env
    environment:
      VITE_API_BASE_URL: http://localhost:8000/api
      VITE_GOOGLE_MAPS_API_KEY: ${VITE_GOOGLE_MAPS_API_KEY}
    ports:
      - "3000:80"
    depends_on:
      - backend
    # 不挂载源码，使用镜像中静态资源 // 2025-09-26 09:14:30
    networks:
      - tms-network

  # Nginx反向代理
  nginx:
    image: nginx:alpine
    container_name: tms-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./docker/nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./docker/nginx/ssl:/etc/nginx/ssl
    depends_on:
      - frontend
      - backend
    networks:
      - tms-network

volumes:
  postgres_data:
  redis_data:

networks:
  tms-network:
    driver: bridge
